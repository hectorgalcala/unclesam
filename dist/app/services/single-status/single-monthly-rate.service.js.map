{"version":3,"file":"single-monthly-rate.service.js","sourceRoot":"","sources":["single-monthly-rate.service.ts"],"names":[],"mappings":"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","sourcesContent":["import { Injectable } from '@angular/core';\n\n@Injectable()\nexport class SingleMonthlyRateService {\n  public fed_with: number;\n  // NOTE Service that is gonna compute Federal Taxes depending of your tax bracket;\n  constructor() {\n  }\n\n  poverty(gross){\n    return gross < 188;\n  }\n\n  low_class(gross){\n    return gross > 188 && gross <= 960;\n  }\n\n  low_middle_class(gross){\n    return gross >= 961 && gross <= 3325;\n  }\n\n  middle_class(gross){\n    return gross >= 3326 && gross <= 7783;\n  }\n\n  upper_middle_class(gross){\n    return gross >= 7784 && gross <= 16033;\n  }\n\n  upper_class(gross){\n    return gross >= 16034 && gross <= 34633;\n  }\n\n  high_upper_class(gross){\n    return gross >= 34634 && gross <= 34775;\n  }\n\n  new_money(gross){\n    return gross >= 34776;\n  }\n\n  computeFed(gross){\n    if(this.poverty(gross)) {\n      this.fed_with = 0;\n    }\n    else if(this.low_class(gross)) {\n      this.fed_with = gross*(10/100);\n    }\n    else if (this.low_middle_class(gross)) {\n      this.fed_with = 77.20 + ((gross-960)*(15/100));\n    }\n    else if (this.middle_class(gross)) {\n      this.fed_with =  431.95 + ((gross-3325)*(25/100));\n    }\n    else if(this.upper_middle_class(gross)) {\n      this.fed_with = 1546.45 + ((gross-7783)*(28/100));\n    }\n    else if(this.upper_class(gross)) {\n      this.fed_with = 3856.45 + ((gross-16033)*(33/100));\n    }\n    else if(this.high_upper_class(gross)) {\n      this.fed_with = 9994.45 + ((gross-34633)*(35/100));\n    }\n    else if (this.new_money(gross)) {\n      this.fed_with = 10044 + gross*(39.6/100);\n    }\n    else {\n      console.log(\"Else happen in single rate()\");\n    }\n      return this.fed_with;\n  }\n}\n"]}